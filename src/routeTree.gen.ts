/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteRouteImport } from './routes/signup/route'
import { Route as LoginRouteRouteImport } from './routes/login/route'
import { Route as ForgotPasswordRouteRouteImport } from './routes/forgot-password/route'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardSettingsRouteRouteImport } from './routes/dashboard/settings/route'
import { Route as DashboardScanRouteRouteImport } from './routes/dashboard/scan/route'
import { Route as DashboardListRouteRouteImport } from './routes/dashboard/list/route'
import { Route as DashboardHomeRouteRouteImport } from './routes/dashboard/home/route'
import { Route as DashboardFamilyRouteRouteImport } from './routes/dashboard/family/route'
import { Route as DashboardAdminRouteRouteImport } from './routes/dashboard/admin/route'
import { Route as DashboardAdminUsersRouteRouteImport } from './routes/dashboard/admin/users/route'
import { Route as DashboardAdminSettingsRouteRouteImport } from './routes/dashboard/admin/settings/route'
import { Route as DashboardAdminSecurityRouteRouteImport } from './routes/dashboard/admin/security/route'
import { Route as DashboardAdminReportsRouteRouteImport } from './routes/dashboard/admin/reports/route'
import { Route as DashboardAdminNotificationsRouteRouteImport } from './routes/dashboard/admin/notifications/route'
import { Route as DashboardAdminMarketInsightsRouteRouteImport } from './routes/dashboard/admin/market-insights/route'
import { Route as DashboardAdminLogsRouteRouteImport } from './routes/dashboard/admin/logs/route'
import { Route as DashboardAdminAuditRouteRouteImport } from './routes/dashboard/admin/audit/route'

const SignupRouteRoute = SignupRouteRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRouteRoute = LoginRouteRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRouteRoute = ForgotPasswordRouteRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardSettingsRouteRoute = DashboardSettingsRouteRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardScanRouteRoute = DashboardScanRouteRouteImport.update({
  id: '/scan',
  path: '/scan',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardListRouteRoute = DashboardListRouteRouteImport.update({
  id: '/list',
  path: '/list',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardHomeRouteRoute = DashboardHomeRouteRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardFamilyRouteRoute = DashboardFamilyRouteRouteImport.update({
  id: '/family',
  path: '/family',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAdminRouteRoute = DashboardAdminRouteRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardAdminUsersRouteRoute =
  DashboardAdminUsersRouteRouteImport.update({
    id: '/users',
    path: '/users',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)
const DashboardAdminSettingsRouteRoute =
  DashboardAdminSettingsRouteRouteImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)
const DashboardAdminSecurityRouteRoute =
  DashboardAdminSecurityRouteRouteImport.update({
    id: '/security',
    path: '/security',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)
const DashboardAdminReportsRouteRoute =
  DashboardAdminReportsRouteRouteImport.update({
    id: '/reports',
    path: '/reports',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)
const DashboardAdminNotificationsRouteRoute =
  DashboardAdminNotificationsRouteRouteImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)
const DashboardAdminMarketInsightsRouteRoute =
  DashboardAdminMarketInsightsRouteRouteImport.update({
    id: '/market-insights',
    path: '/market-insights',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)
const DashboardAdminLogsRouteRoute = DashboardAdminLogsRouteRouteImport.update({
  id: '/logs',
  path: '/logs',
  getParentRoute: () => DashboardAdminRouteRoute,
} as any)
const DashboardAdminAuditRouteRoute =
  DashboardAdminAuditRouteRouteImport.update({
    id: '/audit',
    path: '/audit',
    getParentRoute: () => DashboardAdminRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '/dashboard/admin': typeof DashboardAdminRouteRouteWithChildren
  '/dashboard/family': typeof DashboardFamilyRouteRoute
  '/dashboard/home': typeof DashboardHomeRouteRoute
  '/dashboard/list': typeof DashboardListRouteRoute
  '/dashboard/scan': typeof DashboardScanRouteRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRoute
  '/dashboard/admin/audit': typeof DashboardAdminAuditRouteRoute
  '/dashboard/admin/logs': typeof DashboardAdminLogsRouteRoute
  '/dashboard/admin/market-insights': typeof DashboardAdminMarketInsightsRouteRoute
  '/dashboard/admin/notifications': typeof DashboardAdminNotificationsRouteRoute
  '/dashboard/admin/reports': typeof DashboardAdminReportsRouteRoute
  '/dashboard/admin/security': typeof DashboardAdminSecurityRouteRoute
  '/dashboard/admin/settings': typeof DashboardAdminSettingsRouteRoute
  '/dashboard/admin/users': typeof DashboardAdminUsersRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '/dashboard/admin': typeof DashboardAdminRouteRouteWithChildren
  '/dashboard/family': typeof DashboardFamilyRouteRoute
  '/dashboard/home': typeof DashboardHomeRouteRoute
  '/dashboard/list': typeof DashboardListRouteRoute
  '/dashboard/scan': typeof DashboardScanRouteRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRoute
  '/dashboard/admin/audit': typeof DashboardAdminAuditRouteRoute
  '/dashboard/admin/logs': typeof DashboardAdminLogsRouteRoute
  '/dashboard/admin/market-insights': typeof DashboardAdminMarketInsightsRouteRoute
  '/dashboard/admin/notifications': typeof DashboardAdminNotificationsRouteRoute
  '/dashboard/admin/reports': typeof DashboardAdminReportsRouteRoute
  '/dashboard/admin/security': typeof DashboardAdminSecurityRouteRoute
  '/dashboard/admin/settings': typeof DashboardAdminSettingsRouteRoute
  '/dashboard/admin/users': typeof DashboardAdminUsersRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/forgot-password': typeof ForgotPasswordRouteRoute
  '/login': typeof LoginRouteRoute
  '/signup': typeof SignupRouteRoute
  '/dashboard/admin': typeof DashboardAdminRouteRouteWithChildren
  '/dashboard/family': typeof DashboardFamilyRouteRoute
  '/dashboard/home': typeof DashboardHomeRouteRoute
  '/dashboard/list': typeof DashboardListRouteRoute
  '/dashboard/scan': typeof DashboardScanRouteRoute
  '/dashboard/settings': typeof DashboardSettingsRouteRoute
  '/dashboard/admin/audit': typeof DashboardAdminAuditRouteRoute
  '/dashboard/admin/logs': typeof DashboardAdminLogsRouteRoute
  '/dashboard/admin/market-insights': typeof DashboardAdminMarketInsightsRouteRoute
  '/dashboard/admin/notifications': typeof DashboardAdminNotificationsRouteRoute
  '/dashboard/admin/reports': typeof DashboardAdminReportsRouteRoute
  '/dashboard/admin/security': typeof DashboardAdminSecurityRouteRoute
  '/dashboard/admin/settings': typeof DashboardAdminSettingsRouteRoute
  '/dashboard/admin/users': typeof DashboardAdminUsersRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/dashboard/admin'
    | '/dashboard/family'
    | '/dashboard/home'
    | '/dashboard/list'
    | '/dashboard/scan'
    | '/dashboard/settings'
    | '/dashboard/admin/audit'
    | '/dashboard/admin/logs'
    | '/dashboard/admin/market-insights'
    | '/dashboard/admin/notifications'
    | '/dashboard/admin/reports'
    | '/dashboard/admin/security'
    | '/dashboard/admin/settings'
    | '/dashboard/admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/dashboard/admin'
    | '/dashboard/family'
    | '/dashboard/home'
    | '/dashboard/list'
    | '/dashboard/scan'
    | '/dashboard/settings'
    | '/dashboard/admin/audit'
    | '/dashboard/admin/logs'
    | '/dashboard/admin/market-insights'
    | '/dashboard/admin/notifications'
    | '/dashboard/admin/reports'
    | '/dashboard/admin/security'
    | '/dashboard/admin/settings'
    | '/dashboard/admin/users'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/forgot-password'
    | '/login'
    | '/signup'
    | '/dashboard/admin'
    | '/dashboard/family'
    | '/dashboard/home'
    | '/dashboard/list'
    | '/dashboard/scan'
    | '/dashboard/settings'
    | '/dashboard/admin/audit'
    | '/dashboard/admin/logs'
    | '/dashboard/admin/market-insights'
    | '/dashboard/admin/notifications'
    | '/dashboard/admin/reports'
    | '/dashboard/admin/security'
    | '/dashboard/admin/settings'
    | '/dashboard/admin/users'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  ForgotPasswordRouteRoute: typeof ForgotPasswordRouteRoute
  LoginRouteRoute: typeof LoginRouteRoute
  SignupRouteRoute: typeof SignupRouteRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/settings': {
      id: '/dashboard/settings'
      path: '/settings'
      fullPath: '/dashboard/settings'
      preLoaderRoute: typeof DashboardSettingsRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/scan': {
      id: '/dashboard/scan'
      path: '/scan'
      fullPath: '/dashboard/scan'
      preLoaderRoute: typeof DashboardScanRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/list': {
      id: '/dashboard/list'
      path: '/list'
      fullPath: '/dashboard/list'
      preLoaderRoute: typeof DashboardListRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/home': {
      id: '/dashboard/home'
      path: '/home'
      fullPath: '/dashboard/home'
      preLoaderRoute: typeof DashboardHomeRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/family': {
      id: '/dashboard/family'
      path: '/family'
      fullPath: '/dashboard/family'
      preLoaderRoute: typeof DashboardFamilyRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin': {
      id: '/dashboard/admin'
      path: '/admin'
      fullPath: '/dashboard/admin'
      preLoaderRoute: typeof DashboardAdminRouteRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/admin/users': {
      id: '/dashboard/admin/users'
      path: '/users'
      fullPath: '/dashboard/admin/users'
      preLoaderRoute: typeof DashboardAdminUsersRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/settings': {
      id: '/dashboard/admin/settings'
      path: '/settings'
      fullPath: '/dashboard/admin/settings'
      preLoaderRoute: typeof DashboardAdminSettingsRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/security': {
      id: '/dashboard/admin/security'
      path: '/security'
      fullPath: '/dashboard/admin/security'
      preLoaderRoute: typeof DashboardAdminSecurityRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/reports': {
      id: '/dashboard/admin/reports'
      path: '/reports'
      fullPath: '/dashboard/admin/reports'
      preLoaderRoute: typeof DashboardAdminReportsRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/notifications': {
      id: '/dashboard/admin/notifications'
      path: '/notifications'
      fullPath: '/dashboard/admin/notifications'
      preLoaderRoute: typeof DashboardAdminNotificationsRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/market-insights': {
      id: '/dashboard/admin/market-insights'
      path: '/market-insights'
      fullPath: '/dashboard/admin/market-insights'
      preLoaderRoute: typeof DashboardAdminMarketInsightsRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/logs': {
      id: '/dashboard/admin/logs'
      path: '/logs'
      fullPath: '/dashboard/admin/logs'
      preLoaderRoute: typeof DashboardAdminLogsRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
    '/dashboard/admin/audit': {
      id: '/dashboard/admin/audit'
      path: '/audit'
      fullPath: '/dashboard/admin/audit'
      preLoaderRoute: typeof DashboardAdminAuditRouteRouteImport
      parentRoute: typeof DashboardAdminRouteRoute
    }
  }
}

interface DashboardAdminRouteRouteChildren {
  DashboardAdminAuditRouteRoute: typeof DashboardAdminAuditRouteRoute
  DashboardAdminLogsRouteRoute: typeof DashboardAdminLogsRouteRoute
  DashboardAdminMarketInsightsRouteRoute: typeof DashboardAdminMarketInsightsRouteRoute
  DashboardAdminNotificationsRouteRoute: typeof DashboardAdminNotificationsRouteRoute
  DashboardAdminReportsRouteRoute: typeof DashboardAdminReportsRouteRoute
  DashboardAdminSecurityRouteRoute: typeof DashboardAdminSecurityRouteRoute
  DashboardAdminSettingsRouteRoute: typeof DashboardAdminSettingsRouteRoute
  DashboardAdminUsersRouteRoute: typeof DashboardAdminUsersRouteRoute
}

const DashboardAdminRouteRouteChildren: DashboardAdminRouteRouteChildren = {
  DashboardAdminAuditRouteRoute: DashboardAdminAuditRouteRoute,
  DashboardAdminLogsRouteRoute: DashboardAdminLogsRouteRoute,
  DashboardAdminMarketInsightsRouteRoute:
    DashboardAdminMarketInsightsRouteRoute,
  DashboardAdminNotificationsRouteRoute: DashboardAdminNotificationsRouteRoute,
  DashboardAdminReportsRouteRoute: DashboardAdminReportsRouteRoute,
  DashboardAdminSecurityRouteRoute: DashboardAdminSecurityRouteRoute,
  DashboardAdminSettingsRouteRoute: DashboardAdminSettingsRouteRoute,
  DashboardAdminUsersRouteRoute: DashboardAdminUsersRouteRoute,
}

const DashboardAdminRouteRouteWithChildren =
  DashboardAdminRouteRoute._addFileChildren(DashboardAdminRouteRouteChildren)

interface DashboardRouteRouteChildren {
  DashboardAdminRouteRoute: typeof DashboardAdminRouteRouteWithChildren
  DashboardFamilyRouteRoute: typeof DashboardFamilyRouteRoute
  DashboardHomeRouteRoute: typeof DashboardHomeRouteRoute
  DashboardListRouteRoute: typeof DashboardListRouteRoute
  DashboardScanRouteRoute: typeof DashboardScanRouteRoute
  DashboardSettingsRouteRoute: typeof DashboardSettingsRouteRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardAdminRouteRoute: DashboardAdminRouteRouteWithChildren,
  DashboardFamilyRouteRoute: DashboardFamilyRouteRoute,
  DashboardHomeRouteRoute: DashboardHomeRouteRoute,
  DashboardListRouteRoute: DashboardListRouteRoute,
  DashboardScanRouteRoute: DashboardScanRouteRoute,
  DashboardSettingsRouteRoute: DashboardSettingsRouteRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  ForgotPasswordRouteRoute: ForgotPasswordRouteRoute,
  LoginRouteRoute: LoginRouteRoute,
  SignupRouteRoute: SignupRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
